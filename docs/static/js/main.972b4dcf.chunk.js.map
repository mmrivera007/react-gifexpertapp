{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","a","categoria","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,OAMhB,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAflB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCYhBG,EAjBF,uCAAG,uCAAAC,EAAA,6DAAOC,EAAP,EAAOA,UACbC,EADM,iDAC0CC,UAAUF,GADpD,+DAGYG,MAAMF,GAHlB,cAGNG,EAHM,gBAISA,EAAUC,OAJnB,uBAILC,EAJK,EAILA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAV7B,kBAcLM,GAdK,4CAAH,sDCYEO,EAXK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAG9B,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAOf,EAAKgB,IAAKN,IACtB,2BAAIA,KCDHO,EAAU,SAAC,GAAiB,IAAhBlB,EAAe,EAAfA,UAAe,ECJZ,SAACA,GAAe,IAAD,EACbf,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAgBvC,OAVAC,qBAAU,WACNxB,EAASE,GAAYuB,MAAK,SAAAC,GAEtBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAACnB,IACGoB,EDLwBK,CAAczB,GAAjCY,EAPwB,EAO7BN,KAAaa,EAPgB,EAOhBA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqCf,GAClDmB,GAAW,uBAAGJ,UAAU,oCAAb,cAEX,yBAAKA,UAAU,aAERH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UESvCkB,EA7BM,WAAM,MAGa1C,mBAAS,CAAC,eAHvB,mBAGhBQ,EAHgB,KAGJT,EAHI,KAUvB,OACI,oCACI,4CAEA,kBAAC,EAAD,CAAaA,cAAiBA,IAE9B,6BAEA,4BAEQS,EAAWe,KAAK,SAAAR,GAAS,OACrB,kBAAC,EAAD,CAAS0B,IAAK1B,EAAWA,UAAaA,U,MCnB9D4B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.972b4dcf.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length > 2){\r\n            setCategorias(categorias => [inputValue,...categorias]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n};\r\n","\r\nconst getGifs = async({categoria}) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=VV9WMPWdznHZ9v06pbYzWW8tUs1lTedp`;\r\n\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n            \r\n    const gifs = data.map( img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n};\r\n\r\nexport default getGifs;","import React from 'react';\r\n\r\nconst GifGridItem = ( {id, title, url} ) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src = {url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default GifGridItem;\r\n","//import React,{useEffect, useState} from 'react';\r\nimport React from 'react';\r\nimport { useFecthGifs } from '../hooks/useFecthGifs';\r\n//import getGifs from '../helpers/getGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n/*     const [images, setImages] = useState([]);\r\n    //En clases es el metodo componentDiddunMount\r\n    useEffect( () => {\r\n        getGifs( categoria ).then(setImages);\r\n    },[categoria]); */\r\n    const {data:images, loading} = useFecthGifs( categoria );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n{            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem key={img.id} {...img}/>\r\n                    ))\r\n                }\r\n            </div>      }  \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport const useFecthGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( categoria ).then(imgs => {\r\n\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n            \r\n        });\r\n    }, [categoria])\r\n    return state;\r\n}\r\n\r\n","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categorias = ['Desarrollo', 'Infraestructura', 'Soporte'];\r\n    const [categorias, setCategorias] = useState(['Desarrollo']);\r\n\r\n    /* const handleAdd = () =>{\r\n        //setCategorias([...categorias, 'Planificación']);\r\n        setCategorias( categoria => [...categorias, 'Planificación']);\r\n    } */\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategorias = {setCategorias} />\r\n\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categorias.map( categoria => (\r\n                        <GifGrid key={categoria} categoria = {categoria}/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}